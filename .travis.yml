# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=transfer

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    #- env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl
    #
    ## OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #
    ## *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
    #
    ## Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    #
    ## Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install:
  - set -e
  - rustup self update
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.3.2
  - export PATH=$HOME/.yarn/bin:$PATH
  - npm install -g react-scripts

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "IbUCa1Qaz73T+yXsM7hXEjy/j1XnYmnsTKsPgaZ/tr7sj8HSBYGcXutv0wDH9c+UEb4fR7h2HuVJhEZIFP2mE+xUkWtGTMnxkIXRlxDv17eS3QDBu8tpzJrD/pRSMkMgZob5g2GAahpZeFuFPY8XC+LHHcEtmbvJDj2LxpDoNPIeJghAIDW5cL5RptK6++MG1axnTvBLg0fc7AmTD9XIc/lnGyiPcRgX9ljCRc9mYEC5/fMgnqkYXeXhw4didfihYmL9DFdqsmP98zfho8VHQjJB7CqF4/RxNhwNxtQ6k/dqYqV+e4r1p4p5nzlN1Z3LCbZE1ZcAxywx7NxQaTgrzex9EuKi4hQPKnsTOGlN2Pi8wD+UKtWMxWoblIS9F8dKG/UVg6zBmAQL19KNT6YnAUzgxnNg1ezWQr3o9oJ9RK7Fjwh3klahUs80jlN6Z1tasKGFWLwRifhVPGBUONjZb4b0tKIeblswkvPwQ7niR1ZmOp63HM6yY1b0t+jvjfGlMGVOSU5O5EaymFfvqiNsCPhrpbDwYQWJ4afEkpvMiYnp2CB3RWdUujjIBYxc5cuAOEI40FOh8ulDuBr2D9FmfYJAx+3xq/G1GnOPkcAk8n3JX/vBNwwITVuC8i+U6E1VuyxRoGk3+HEbRYSqHNRtd7JQ0AJGqVay7ywomwMgWh0="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
